{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/contrat.ts","webpack:///./src/app/classes/donneesContrat.ts","webpack:///./src/app/classes/personne.ts","webpack:///./src/app/classes/planning.ts","webpack:///./src/app/classes/profilNounou.ts","webpack:///./src/app/classes/user.ts","webpack:///./src/app/components/connexion/connexion.component.html","webpack:///./src/app/components/connexion/connexion.component.scss","webpack:///./src/app/components/connexion/connexion.component.ts","webpack:///./src/app/components/contrat/contrat.component.html","webpack:///./src/app/components/contrat/contrat.component.scss","webpack:///./src/app/components/contrat/contrat.component.ts","webpack:///./src/app/components/liste-contrats/liste-contrats.component.html","webpack:///./src/app/components/liste-contrats/liste-contrats.component.scss","webpack:///./src/app/components/liste-contrats/liste-contrats.component.ts","webpack:///./src/app/components/liste-personnes/liste-personnes.component.html","webpack:///./src/app/components/liste-personnes/liste-personnes.component.scss","webpack:///./src/app/components/liste-personnes/liste-personnes.component.ts","webpack:///./src/app/components/profil-nounou/profil-nounou.component.html","webpack:///./src/app/components/profil-nounou/profil-nounou.component.scss","webpack:///./src/app/components/profil-nounou/profil-nounou.component.ts","webpack:///./src/app/components/side-nav/side-nav.component.html","webpack:///./src/app/components/side-nav/side-nav.component.scss","webpack:///./src/app/components/side-nav/side-nav.component.ts","webpack:///./src/app/components/sign-up/sign-up.component.html","webpack:///./src/app/components/sign-up/sign-up.component.scss","webpack:///./src/app/components/sign-up/sign-up.component.ts","webpack:///./src/app/components/update-personne/update-personne.component.html","webpack:///./src/app/components/update-personne/update-personne.component.scss","webpack:///./src/app/components/update-personne/update-personne.component.ts","webpack:///./src/app/services/contrat.service.ts","webpack:///./src/app/services/error-handler.service.ts","webpack:///./src/app/services/personnes.service.ts","webpack:///./src/app/services/profil-nounou.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-sidenav-container class=\\\"sidenavContainer\\\">\\n  <mat-sidenav #sidenav mode=\\\"side\\\" opened=\\\"true\\\" class=\\\"sidenav\\\" [fixedInViewport]=true >        \\n      <app-connexion></app-connexion>\\n      <app-side-nav></app-side-nav>\\n  </mat-sidenav>\\n  <mat-sidenav-content role=\\\"main\\\">\\n      <!-- <div class=\\\"banniere\\\" ></div> -->\\n      <router-outlet></router-outlet>  \\n  </mat-sidenav-content>     \\n</mat-sidenav-container>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  constructor(){\n    const config = {\n      apiKey: \"AIzaSyDhV8nVBIu81DVQ7LnSUXIfT2tagiye7X8\",\n      authDomain: \"marilyne-royer.firebaseapp.com\",\n      databaseURL: \"https://marilyne-royer.firebaseio.com\",\n      projectId: \"marilyne-royer\",\n      storageBucket: \"marilyne-royer.appspot.com\",\n      messagingSenderId: \"972596999367\"\n    };\n    firebase.initializeApp(config); \n    const firestore = firebase.firestore();\n    const settings = {timestampsInSnapshots: true};\n    firestore.settings(settings); \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component, ErrorHandler } from '@angular/core';\nimport { Router, Routes, RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { MatCardModule, MatFormFieldModule, MatSidenavModule, \n  MatInputModule, MatButtonModule, MatCheckboxModule, MatDividerModule, \n  MatMenuModule, MatIconModule, MatExpansionModule, MatDialogModule, \n  MatSnackBarModule, MatSelectModule, MatTableModule, MatTabsModule, \n  MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatListModule, MatListItem } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { ConnexionComponent } from './components/connexion/connexion.component';\n\nimport { UsersService } from './services/users.service';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ErrorHandlerService, modalErrorHandler } from './services/error-handler.service';\nimport { PersonnesService } from './services/personnes.service';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ProfilNounouComponent } from './components/profil-nounou/profil-nounou.component';\nimport { ProfilNounouService } from './services/profil-nounou.service';\nimport { ContratComponent } from './components/contrat/contrat.component';\nimport { ListeContratsComponent } from './components/liste-contrats/liste-contrats.component';\nimport { ListePersonnesComponent } from './components/liste-personnes/liste-personnes.component';\nimport { UpdatePersonneComponent } from './components/update-personne/update-personne.component';\n\nconst mesRoutes = [\n  { path: 'signUp', component      : SignUpComponent },\n  { path: 'profilNounou', component: ProfilNounouComponent },\n  { path: 'contrat', component     : ContratComponent },\n  { path: 'contrats', component    : ListeContratsComponent },\n  { path: 'personnes', component   : ListePersonnesComponent },\n  { path: '', redirectTo           : 'accueil', pathMatch: 'full' },\n  { path: '**', redirectTo         : 'accueil' }   \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConnexionComponent,\n    SideNavComponent,\n    modalErrorHandler,\n    SignUpComponent,\n    ProfilNounouComponent,\n    ContratComponent,\n    ListeContratsComponent,\n    ListePersonnesComponent,\n    UpdatePersonneComponent\n  ],\n  imports: [\n    BrowserModule, ReactiveFormsModule, FormsModule,\n    RouterModule.forRoot(mesRoutes),\n    MatCardModule, MatFormFieldModule, MatSidenavModule,\n    BrowserModule, BrowserAnimationsModule, MatInputModule, MatButtonModule, \n    MatCheckboxModule, MatCardModule, MatDividerModule, MatMenuModule, MatIconModule,\n    MatExpansionModule, MatDialogModule, MatSnackBarModule, MatSelectModule,\n    MatTableModule, MatTabsModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule,\n    MatListModule,\n  ],\n  providers: [\n    UsersService,\n    ErrorHandlerService,\n    PersonnesService,\n    ProfilNounouService\n  ],\n  entryComponents: [\n    modalErrorHandler,\n    UpdatePersonneComponent,\n    SideNavComponent\n  ],\n  bootstrap: [AppComponent] \n})\nexport class AppModule { }\n","export class Contrat {\n    tauxHoraireBrut     : number =0\n    tauxHoraireNet      : number =0\n    nbSemainesGardeAn   : number =0\n    nbHeuresGardeSemaine: number =0\n    nbJoursGardeSemaine : number =0\n    montantRepas        : number =0\n    montantIndemnites   : number =0\n    montantGouter       : number =0\n    baremeKm            : number =0\n    salaireBaseBrut     : number =0\n    salaireBaseNet      : number =0\n    congesPayesBaseBrut : number =0\n    congesPayesBaseNet  : number =0\n    salaireTotalBaseBrut: number =0\n    salaireTotalBaseNet : number =0\n    dateDebut           : Date\n    dateFin             : Date\n    moyNbJoursGardeMois : number =0\n    moyNbHeuresGardeMois: number =0\n}","import { Contrat } from './contrat'\nimport { Planning } from './planning'\nimport { Personne } from './personne';\n\nexport class DonneesContrat{\n    contrat : Contrat\n    enfant  : Personne\n    pere    : Personne\n    mere    : Personne\n    docteur : Personne\n    tuteur  : Personne\n    planning: Planning\n}","export class Personne{\n    public idDoc        : string = \"\";\n    public nom          : string = '';\n    public prenom       : string = '';\n    public dateNaissance: Date\n    public adresse      : string = '';\n    public telPortable  : string = '';\n    public mail         : string = '';\n    public actif        : boolean=true; \n    public status       : string = '';\n    public urlPhoto     : string = '';\n}","export class Planning {\n    lundi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    mardi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    mercredi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    jeudi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    vendredi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    samedi = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n    dimanche = {\n        heureArrivee: '',\n        heureDepart : '' \n    }\n}","export class profilNounou{\n    tauxHoraire      : number\n    montantRepas     : number\n    montantIndemnites: number\n    montantGouters   : number\n    baremeKm         : number\n}","export class User{\n    public uidfirebase: string\n    public email      : string\n    public mdp        : string\n    public status     : string\n    public isConnected: boolean\n    public urlPhoto   : string\n\n    constructor(pId?: number, pEmail?: string, pMdp?: string, pStatus?: string)\n    {\n        (pEmail)? this.email=pEmail: this.email='';\n        (pMdp)? this.mdp=pMdp: this.mdp='';\n        (pStatus)? this.status=pStatus: this.status='Visiteur';\n        this.isConnected=false\n    }\n}","module.exports = \"<div *ngIf='user.isConnected; else elseBlock'>\\n  <mat-card>\\n      <mat-card-header>            \\n              <mat-card-title><h3>{{personne.prenom}}</h3></mat-card-title>\\n              <mat-card-title><h3>{{personne.nom}}</h3></mat-card-title>\\n          <img #avatar mat-card-avatar mat-card-md-image [src]=\\\"personne.urlPhoto\\\" >\\n          <mat-card-subtitle><a routerLink='/' (click)='deconnexion()'>Déconnexion</a></mat-card-subtitle>\\n      </mat-card-header> \\n  </mat-card>    \\n</div>\\n<ng-template #elseBlock>  \\n    <form [formGroup]=\\\"userForm\\\">\\n        <mat-card>\\n            <mat-icon>email</mat-icon>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" formControlName=\\\"email\\\" placeholder='E-mail'>                \\n            </mat-form-field>\\n            <br><i class=\\\"material-icons prefix\\\">vpn_key</i>\\n            <mat-form-field>\\n                <input matInput type=\\\"password\\\" formControlName=\\\"mdp\\\" placeholder='Mot de passe'>\\n                <mat-error></mat-error>\\n            </mat-form-field><br>     \\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"userForm.invalid\\\" (click)=\\\"connexion()\\\" name=\\\"btnEnvoi\\\" class = \\\"btn z-depth-4\\\">Connexion</button><br/>         \\n            <br><a routerLink=\\\"/signUp\\\">S'inscrire </a>\\n        </mat-card>\\n    </form>    \\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from '../../classes/user';\nimport { Personne } from '../../classes/personne';\n\nimport { UsersService } from '../../services/users.service' \nimport { PersonnesService } from '../../services/personnes.service'\nimport { ErrorHandlerService, modalErrorHandler } from '../../services/error-handler.service'\n\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector   : 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls  : ['./connexion.component.scss']\n})\nexport class ConnexionComponent implements OnInit {\n\n  user                : User = new User();\n  personne            : Personne = new Personne();\n  souscriptionUser    : Subscription;\n  souscriptionPersonne: Subscription;\n  userForm            : FormGroup;\n\n  constructor(\n    private serviceUsers   : UsersService,\n    private servicePersonne: PersonnesService,\n    private snackBar       : MatSnackBar,\n    private formBuilder    : FormBuilder,\n    private serviceErreur  : ErrorHandlerService\n  ) { }\n\n  connexion(){\n    //lors du clic sur le bouton connexion dans le formulaire\n    const formulaire = this.userForm.value;\n    let userTemp = new User();\n    userTemp.email=formulaire['email'];\n    userTemp.mdp = formulaire['mdp'];\n    this.serviceUsers.signIn(userTemp); \n  }\n\n  //Déconnecte l'utilisateur\n  deconnexion(){\n    this.serviceUsers.signOut();\n  }\n\n  initializeForm(){\n    this.userForm = this.formBuilder.group({\n      email: ['', [Validators.email, Validators.required]],\n      mdp  : ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    \n    this.souscriptionPersonne = this.servicePersonne.subjectPersonne.subscribe(\n      (personne: Personne)=>{\n        //La connexion a été établie, on a récupéré les données de la personne connectée\n        this.personne=personne;\n        this.snackBar.open(\"Bienvenue \" + ((this.personne.prenom)?this.personne.prenom:`visiteur`) + '.', 'Fermer', {\n          duration: 2500}\n        )\n    },\n    //une erreur s'est produite\n    (error)=>{\n      this.serviceErreur.afficheErreur(`Erreur lors de la connexion de l'utilisateur`, error)\n    });\n    \n    this.souscriptionUser = this.serviceUsers.subjectUser.subscribe(\n      (user: User)=>{\n        this.user=user;        \n    },\n    (error)=>{\n      this.serviceErreur.afficheErreur(`Erreur lors de la connexion de l'utilisateur`, error)\n    });\n    if (this.userForm.value['email']!='' && this.userForm.value['mdp']!='') this.connexion();\n  }\n\n  ngOnDestroy(){\n    this.souscriptionUser.unsubscribe();\n    this.souscriptionPersonne.unsubscribe();\n  }\n}\n","module.exports = \"<mat-tab-group>   \\n  <mat-tab label=\\\"Renseignements\\\"> \\n    <form [formGroup]='userForm'>   \\n      <div>\\n        <h3 class='h3-contrat'><mat-icon matPrefix>child_care</mat-icon> Enfant</h3> \\n        <mat-divider></mat-divider>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom\\\" formControlName='enfantNom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prénom\\\" formControlName='enfantPrenom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]='dateNaissanceEnfant' placeholder=\\\"Date de naissance\\\" formControlName=\\\"enfantDateNaissance\\\">\\n          <mat-datepicker-toggle matPrefix [for]='dateNaissanceEnfant'></mat-datepicker-toggle>\\n          <mat-datepicker #dateNaissanceEnfant></mat-datepicker>\\n        </mat-form-field>\\n      </div> \\n      <div>\\n        <h3 class='h3-contrat'><mat-icon matPrefix>supervisor_account</mat-icon> Mère</h3>\\n        <mat-divider></mat-divider>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom\\\" formControlName='mereNom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prénom\\\" formControlName='merePrenom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"E-mail\\\" formControlName='mereMail'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adresse\\\" formControlName='mereAdresse'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro de téléphone\\\" formControlName='mereTelPortable'>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <h3 class='h3-contrat'><mat-icon matPrefix>supervisor_account</mat-icon> Père</h3>\\n        <mat-divider></mat-divider>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom\\\" formControlName='pereNom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prénom\\\" formControlName='perePrenom' required>\\n          <mat-error *ngIf=\\\"userForm.invalid\\\">Champ requis invalide</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"E-mail\\\" formControlName='pereMail'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adresse\\\" formControlName='pereAdresse'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro de téléphone\\\" formControlName='pereTelPortable'>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <h3 class='h3-contrat'><mat-icon matPrefix>person</mat-icon> Tuteur</h3>\\n        <mat-divider></mat-divider>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom\\\" formControlName='tuteurNom'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prénom\\\" formControlName='tuteurPrenom'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro de téléphone\\\" formControlName='tuteurTelPortable'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adresse\\\" formControlName='tuteurAdresse'>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <h3 class='h3-contrat'><mat-icon matPrefix>local_hospital</mat-icon> Médecin de famille</h3>\\n        <mat-divider></mat-divider>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom\\\" formControlName='medecinNom'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prénom\\\" formControlName='medecinPrenom'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro de téléphone\\\" formControlName='medecinTelPortable'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adresse\\\" formControlName='medecinAdresse'>\\n        </mat-form-field>\\n      </div>\\n    </form>\\n  </mat-tab>\\n  <mat-tab label=\\\"Contrat\\\"> \\n    <form [formGroup]='userForm'> \\n      <h3 class=\\\"h3-contrat\\\"><mat-icon matPrefix>home</mat-icon><i>Conditions d'accueil </i></h3>\\n      <mat-divider></mat-divider>\\n      <div>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Moy d'heures par semaine\\\" formControlName=\\\"nbHeuresGardeSemaine\\\" (keyup)='majNbHeuresGardeSemaine()'>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Moy de semaines par an\\\" formControlName=\\\"nbSemainesGardeAn\\\" (keyup)='majNbSemainesGardeAn()'>\\n        </mat-form-field>  \\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nb de jours par semaine\\\" formControlName=\\\"nbJoursGardeSemaine\\\" (keyup)='majNbJoursGardeSemaine()'>\\n        </mat-form-field>               \\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <input matInput  placeholder=\\\"Moy d'heures par mois\\\" formControlName=\\\"moyNbHeuresGardeMois\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Moy de jours par mois\\\" formControlName=\\\"moyNbJoursGardeMois\\\">\\n          </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [min]='minDateDebut' [matDatepicker]=\\\"datePickerDebut\\\" placeholder=\\\"Date de début du contrat\\\" formControlName=\\\"dateDebut\\\">\\n          <mat-datepicker-toggle matPrefix [for]='datePickerDebut'></mat-datepicker-toggle>\\n          <mat-datepicker #datePickerDebut></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [min]='minDateDebut' [matDatepicker]='datePickerfin' placeholder=\\\"Date de fin du contrat\\\" formControlName=\\\"dateFin\\\">\\n          <mat-datepicker-toggle matPrefix [for]='datePickerfin'></mat-datepicker-toggle>\\n          <mat-datepicker #datePickerfin></mat-datepicker>\\n        </mat-form-field>        \\n      </div> \\n      <h3 class=\\\"h3-contrat\\\"><mat-icon matPrefix>euro_symbol</mat-icon><i> Rémunération</i></h3> \\n      <mat-divider></mat-divider>\\n      <div>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Taux horaire brut\\\" formControlName=\\\"tauxHoraireBrut\\\" >          \\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Taux horaire net\\\" formControlName=\\\"tauxHoraireNet\\\" (keyup)='majTauxHoraireNet()'>\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>        \\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Salaire brut mensuel\\\" formControlName=\\\"salaireBaseBrut\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span> \\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Montant CP brut contrat\\\" formControlName=\\\"congesPayesBaseBrut\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Total salaire brut mensuel\\\" formControlName=\\\"salaireTotalBaseBrut\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>        \\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Salaire net mensuel\\\" formControlName=\\\"salaireBaseNet\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Montant CP net contrat\\\" formControlName=\\\"congesPayesBaseNet\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Total salaire net mensuel\\\" formControlName=\\\"salaireTotalBaseNet\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n      </div>\\n      <h3 class=\\\"h3-contrat\\\"><mat-icon matPrefix>restaurant_menu</mat-icon><i>Indemnités</i></h3>\\n      <mat-divider></mat-divider>\\n      <div>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Repas\\\" formControlName=\\\"montantRepas\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"indemnités jounalières\\\" formControlName=\\\"montantIndemnites\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Goûter\\\" formControlName=\\\"montantGouter\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Barème kilométrique\\\" formControlName=\\\"baremeKm\\\">\\n          <span matSuffix><mat-icon>euro_symbol</mat-icon></span>\\n        </mat-form-field>\\n      </div>      \\n    </form>\\n  </mat-tab>\\n  <mat-tab label=\\\"Planning\\\">\\n    <form [formGroup]='userForm'>\\n      <mat-divider></mat-divider>\\n      <h3 class='h3-contrat'><u><i>Lundi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='lundiArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='lundiDepart'>\\n      </mat-form-field>  \\n      <h3 class='h3-contrat'><u><i>Mardi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='mardiArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='mardiDepart'>\\n      </mat-form-field>\\n      <h3 class='h3-contrat'><u><i>Mercredi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='mercrediArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='mercrediDepart'>\\n      </mat-form-field>\\n      <h3 class='h3-contrat'><u><i>Jeudi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='jeudiArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='jeudiDepart'>\\n      </mat-form-field>\\n      <h3 class='h3-contrat'><u><i>Vendredi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='vendrediArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='vendrediDepart'>\\n      </mat-form-field>\\n      <h3 class='h3-contrat'><u><i>Samedi</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='samediArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='samediDepart'>\\n      </mat-form-field>\\n      <h3 class='h3-contrat'><u><i>Dimanche</i></u></h3>\\n      <label>Heure d'arrivée : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='dimancheArrivee'>\\n      </mat-form-field>\\n      <label>Heure de départ : </label>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"HH:MM\\\" formControlName='dimancheDepart'>\\n      </mat-form-field>   \\n    </form>\\n  </mat-tab>\\n</mat-tab-group>\\n<a routerLink='' mat-raised-button> \\n  <mat-icon matPrefix>cancel</mat-icon>\\n  Annuler\\n</a>\\n<button mat-raised-button [disabled]=\\\"userForm.invalid\\\" color=\\\"primary\\\" (click)='envoiContrat()'>\\n<!-- <button mat-raised-button color=\\\"primary\\\" (click)='envoiContrat()'> -->\\n  Valider le contrat\\n  <mat-icon matSuffix>send</mat-icon>\\n</button>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { DonneesContrat } from '../../classes/donneesContrat';\nimport { Contrat } from '../../classes/contrat';\nimport { Planning } from '../../classes/planning';\nimport { Personne } from '../../classes/personne';\nimport { ProfilNounouService } from '../../services/profil-nounou.service';\nimport { profilNounou } from '../../classes/profilNounou';\nimport { ContratService } from '../../services/contrat.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, DateAdapter } from '@angular/material';\n\n@Component({\n  selector: 'app-contrat',\n  templateUrl: './contrat.component.html',\n  styleUrls: ['./contrat.component.scss']\n})\nexport class ContratComponent implements OnInit {\n\n  private userForm: FormGroup;\n  donneesContrat  : DonneesContrat = new DonneesContrat();\n  profilNounou    : profilNounou;\n\n  constructor(\n    private formBuilder        : FormBuilder,\n    private serviceProfilNounou: ProfilNounouService,\n    private serviceContrat     : ContratService,\n    private router             : Router,\n    private snackBar           : MatSnackBar,\n    private adapter            : DateAdapter<any>\n  ) { }    \n\n  envoiContrat(){\n    let formulaire=this.userForm.value;\n    // Données enfant\n    this.donneesContrat.enfant.nom           = formulaire['enfantNom'];\n    this.donneesContrat.enfant.prenom        = formulaire['enfantPrenom'];\n    this.donneesContrat.enfant.dateNaissance = formulaire['enfantDateNaissance'];\n    this.donneesContrat.enfant.status        = 'Enfant';\n    this.donneesContrat.enfant.actif         = true;\n    this.donneesContrat.enfant.urlPhoto      = 'https://firebasestorage.googleapis.com/v0/b/marilyne-royer.appspot.com/o/avatars%2Fdefaut-enfant.png?alt=media&token=db7a591b-3eb3-4973-9a63-a283de87dc69';\n    // Données mère\n    this.donneesContrat.mere.nom         = formulaire['mereNom'];\n    this.donneesContrat.mere.prenom      = formulaire['merePrenom'];\n    this.donneesContrat.mere.mail        = formulaire['mereMail'];\n    this.donneesContrat.mere.adresse     = formulaire['mereAdresse'];\n    this.donneesContrat.mere.telPortable = formulaire['mereTelPortable'];\n    this.donneesContrat.mere.actif       = true;\n    this.donneesContrat.mere.status      = 'Parent';\n    this.donneesContrat.mere.urlPhoto    = 'https://firebasestorage.googleapis.com/v0/b/marilyne-royer.appspot.com/o/avatars%2Fdefaut-femme.png?alt=media&token=42d68cc1-1e62-4ddd-a57d-cd5f2ca428ea';\n    // Données père\n    this.donneesContrat.pere.nom         = formulaire['pereNom'];\n    this.donneesContrat.pere.prenom      = formulaire['perePrenom'];\n    this.donneesContrat.pere.mail        = formulaire['pereMail'];\n    this.donneesContrat.pere.adresse     = formulaire['pereAdresse'];\n    this.donneesContrat.pere.telPortable = formulaire['pereTelPortable'];\n    this.donneesContrat.pere.actif       = true;\n    this.donneesContrat.pere.status      = 'Parent';\n    this.donneesContrat.pere.urlPhoto    = 'https://firebasestorage.googleapis.com/v0/b/marilyne-royer.appspot.com/o/avatars%2Fdefaut-homme.png?alt=media&token=9a9fc729-52ee-4be1-af69-3ad4b1ee9c22';\n    // Données tuteur\n    this.donneesContrat.tuteur.nom         = formulaire['tuteurNom'];\n    this.donneesContrat.tuteur.prenom      = formulaire['tuteurPrenom'];\n    this.donneesContrat.tuteur.telPortable = formulaire['tuteurTelPortable'];\n    this.donneesContrat.tuteur.adresse     = formulaire['pereAdresse'];\n    this.donneesContrat.tuteur.actif       = true;\n    this.donneesContrat.tuteur.status      = 'Tuteur';\n    this.donneesContrat.tuteur.urlPhoto    = 'https://firebasestorage.googleapis.com/v0/b/marilyne-royer.appspot.com/o/avatars%2Fdefaut-homme.png?alt=media&token=9a9fc729-52ee-4be1-af69-3ad4b1ee9c22';\n    // Données medecin\n    this.donneesContrat.docteur.nom         = formulaire['medecinNom'];\n    this.donneesContrat.docteur.prenom      = formulaire['medecinPrenom'];\n    this.donneesContrat.docteur.telPortable = formulaire['medecinTelPortable'];\n    this.donneesContrat.docteur.adresse     = formulaire['medecinAdresse'];\n    this.donneesContrat.docteur.actif       = true;\n    this.donneesContrat.docteur.status      = 'Medecin';\n    this.donneesContrat.docteur.urlPhoto    = 'https://firebasestorage.googleapis.com/v0/b/marilyne-royer.appspot.com/o/avatars%2Fdefaut-medecin.png?alt=media&token=74076e51-de2b-410d-95cc-39d013bacb02';\n    // Données contrat déjà remplies\n    // Données planning\n    this.donneesContrat.planning.lundi.heureArrivee    = formulaire['lundiArrivee']\n    this.donneesContrat.planning.lundi.heureDepart     = formulaire['lundiDepart']\n    this.donneesContrat.planning.mardi.heureArrivee    = formulaire['mardiArrivee']    \n    this.donneesContrat.planning.mardi.heureDepart     = formulaire['mardiDepart']\n    this.donneesContrat.planning.mercredi.heureArrivee = formulaire['mercrediArrivee']\n    this.donneesContrat.planning.mercredi.heureDepart  = formulaire['mercrediDepart']\n    this.donneesContrat.planning.jeudi.heureArrivee    = formulaire['jeudiArrivee']\n    this.donneesContrat.planning.jeudi.heureDepart     = formulaire['jeudiDepart']\n    this.donneesContrat.planning.vendredi.heureArrivee = formulaire['vendrediArrivee']\n    this.donneesContrat.planning.vendredi.heureDepart  = formulaire['vendrediDepart']\n    this.donneesContrat.planning.samedi.heureArrivee   = formulaire['samediArrivee']\n    this.donneesContrat.planning.samedi.heureDepart    = formulaire['samediDepart']\n    this.donneesContrat.planning.dimanche.heureArrivee = formulaire['dimancheArrivee']\n    this.donneesContrat.planning.dimanche.heureDepart  = formulaire['dimancheDepart'] \n    //Appeler la méthode du service   \n    this.serviceContrat.registerNewContrat(this.donneesContrat).subscribe(retour=>{\n      if (retour){\n        this.snackBar.open('Enregistrement effectué', 'Fermer', {\n          duration: 2500}\n        )\n      }\n    }); \n  }\n  \n  ngOnInit() {\n    this.adapter.setLocale('fr-FR');\n    this.initForm();\n    this.getProfilNounou();     \n    this.donneesContrat          = new DonneesContrat();\n    this.donneesContrat.contrat  = new Contrat();\n    this.donneesContrat.enfant   = new Personne();\n    this.donneesContrat.mere     = new Personne();\n    this.donneesContrat.pere     = new Personne();\n    this.donneesContrat.docteur  = new Personne();\n    this.donneesContrat.tuteur   = new Personne();   \n    this.donneesContrat.planning = new Planning();\n    this.userForm.get('nbHeuresGardeSemaine').valueChanges.subscribe(valeur => {this.donneesContrat.contrat.nbHeuresGardeSemaine = valeur});\n    this.userForm.get('nbSemainesGardeAn').valueChanges.subscribe(valeur    => {this.donneesContrat.contrat.nbSemainesGardeAn    = valeur});\n    this.userForm.get('nbJoursGardeSemaine').valueChanges.subscribe(valeur  => {this.donneesContrat.contrat.nbJoursGardeSemaine  = valeur});\n    this.userForm.get('moyNbHeuresGardeMois').valueChanges.subscribe(valeur => {this.donneesContrat.contrat.moyNbHeuresGardeMois = valeur});\n    this.userForm.get('moyNbJoursGardeMois').valueChanges.subscribe(valeur  => {this.donneesContrat.contrat.moyNbJoursGardeMois  = valeur});\n    this.userForm.get('tauxHoraireBrut').valueChanges.subscribe(valeur      => {this.donneesContrat.contrat.tauxHoraireBrut      = valeur});\n    this.userForm.get('tauxHoraireNet').valueChanges.subscribe(valeur       => {this.donneesContrat.contrat.tauxHoraireNet       = valeur});\n    this.userForm.get('salaireBaseBrut').valueChanges.subscribe(valeur      => {this.donneesContrat.contrat.salaireBaseBrut      = valeur});\n    this.userForm.get('congesPayesBaseBrut').valueChanges.subscribe(valeur  => {this.donneesContrat.contrat.congesPayesBaseBrut  = valeur});\n    this.userForm.get('salaireTotalBaseBrut').valueChanges.subscribe(valeur => {this.donneesContrat.contrat.salaireTotalBaseBrut = valeur});\n    this.userForm.get('salaireBaseNet').valueChanges.subscribe(valeur       => {this.donneesContrat.contrat.salaireBaseNet       = valeur});\n    this.userForm.get('congesPayesBaseNet').valueChanges.subscribe(valeur   => {this.donneesContrat.contrat.congesPayesBaseNet   = valeur});\n    this.userForm.get('salaireTotalBaseNet').valueChanges.subscribe(valeur  => {this.donneesContrat.contrat.salaireTotalBaseNet  = valeur});\n    this.userForm.get('montantRepas').valueChanges.subscribe(valeur         => {this.donneesContrat.contrat.montantRepas         = valeur});\n    this.userForm.get('montantIndemnites').valueChanges.subscribe(valeur    => {this.donneesContrat.contrat.montantIndemnites    = valeur});\n    this.userForm.get('montantGouter').valueChanges.subscribe(valeur        => {this.donneesContrat.contrat.montantGouter        = valeur});\n    this.userForm.get('baremeKm').valueChanges.subscribe(valeur             => {this.donneesContrat.contrat.baremeKm             = valeur});\n  }\n\n  initForm(){\n    this.userForm= this.formBuilder.group({\n      enfantNom                 : ['', Validators.required], \n      enfantPrenom              : ['', Validators.required],\n      enfantDateNaissance       : [''],\n      mereNom                   : ['', Validators.required],\n      merePrenom                : ['', Validators.required],\n      mereMail                  : [''],\n      mereAdresse               : [''],\n      mereTelPortable           : [''],\n      pereNom                   : ['', Validators.required],\n      perePrenom                : ['', Validators.required],\n      pereMail                  : [''],\n      pereAdresse               : [''],\n      pereTelPortable           : [''],\n      tuteurNom                 : [''],\n      tuteurPrenom              : [''],\n      tuteurTelPortable         : [''],\n      tuteurAdresse             : [''],\n      medecinNom                : [''],\n      medecinPrenom             : [''],\n      medecinTelPortable        : [''],\n      medecinAdresse            : [''],\n      nbHeuresGardeSemaine      : [''],\n      nbSemainesGardeAn         : [''],\n      nbJoursGardeSemaine       : [''],\n      moyNbHeuresGardeMois      : [''],\n      moyNbJoursGardeMois       : [''],\n      dateDebut                 : [''],\n      dateFin                   : [''],\n      tauxHoraireBrut           : [''],\n      tauxHoraireNet            : [''],\n      salaireBaseBrut           : [''],\n      congesPayesBaseBrut       : [''],\n      salaireTotalBaseBrut      : [''],\n      salaireBaseNet            : [''],\n      congesPayesBaseNet        : [''],\n      datesalaireTotalBaseNetFin: [''],\n      salaireTotalBaseNet       : [''],\n      montantRepas              : [''],\n      montantIndemnites         : [''],\n      montantGouter             : [''],\n      baremeKm                  : [''],\n      lundiArrivee              : [''],\n      lundiDepart               : [''],\n      mardiArrivee              : [''],\n      mardiDepart               : [''],\n      mercrediArrivee           : [''],\n      mercrediDepart            : [''],\n      jeudiArrivee              : [''],\n      jeudiDepart               : [''],\n      vendrediArrivee           : [''],\n      vendrediDepart            : [''],\n      samediArrivee             : [''],\n      samediDepart              : [''],\n      dimancheArrivee           : [''],\n      dimancheDepart            : [''] \n    })\n  }\n\n  getProfilNounou(){\n    this.serviceProfilNounou.getProfilFromServer().subscribe(profil=>{\n      if (profil){\n        this.userForm.get('montantRepas').setValue(profil.montantRepas);\n        this.userForm.get('montantIndemnites').setValue(profil.montantIndemnites);\n        this.userForm.get('montantGouter').setValue(profil.montantGouters);\n        this.userForm.get('baremeKm').setValue(profil.baremeKm);\n        this.userForm.get('tauxHoraireNet').setValue(profil.tauxHoraire);\n      }\n    })\n  }\n\n  // Convertit l'objet retourné par le service pour l'affichage dans le service\n  mapObjetContratVersFormulaire(pContrat: Contrat){\n    this.userForm.get('baremeKm').setValue(Number(pContrat.baremeKm).toFixed(2));\n    this.userForm.get('congesPayesBaseBrut').setValue(Number(pContrat.congesPayesBaseBrut).toFixed(2));\n    this.userForm.get('congesPayesBaseNet').setValue(Number(pContrat.congesPayesBaseNet).toFixed(2));\n    this.userForm.get('montantGouter').setValue(Number(pContrat.montantGouter).toFixed(2));\n    this.userForm.get('montantIndemnites').setValue(Number(pContrat.montantIndemnites).toFixed(2));\n    this.userForm.get('montantRepas').setValue(Number(pContrat.montantRepas).toFixed(2));\n    this.userForm.get('moyNbHeuresGardeMois').setValue(Number(pContrat.moyNbHeuresGardeMois).toFixed(2));\n    this.userForm.get('moyNbJoursGardeMois').setValue(Number(pContrat.moyNbJoursGardeMois).toFixed(2));\n    this.userForm.get('nbHeuresGardeSemaine').setValue(pContrat.nbHeuresGardeSemaine);\n    this.userForm.get('nbJoursGardeSemaine').setValue(pContrat.nbJoursGardeSemaine);\n    this.userForm.get('nbSemainesGardeAn').setValue(pContrat.nbSemainesGardeAn);\n    this.userForm.get('salaireBaseBrut').setValue(Number(pContrat.salaireBaseBrut).toFixed(2));\n    this.userForm.get('salaireBaseNet').setValue(Number(pContrat.salaireBaseNet).toFixed(2));\n    this.userForm.get('salaireTotalBaseBrut').setValue(Number(pContrat.salaireTotalBaseBrut).toFixed(2));\n    this.userForm.get('salaireTotalBaseNet').setValue(Number(pContrat.salaireTotalBaseNet).toFixed(2));\n    this.userForm.get('tauxHoraireBrut').setValue(Number(pContrat.tauxHoraireBrut).toFixed(2));\n    this.userForm.get('tauxHoraireNet').setValue(Number(pContrat.tauxHoraireNet).toFixed(2)); \n  }\n\n  // Convertit les données présentes dans le formulaire dans un objet pour travail dans le service\n  mapValeursFormulaireVersObjetContrat(): Contrat{\n    console.log(parseFloat(this.userForm.get('congesPayesBaseBrut').value))\n    let retour: Contrat=new Contrat();\n\n    retour.baremeKm             = parseFloat(this.userForm.get('baremeKm').value);\n    retour.congesPayesBaseBrut  = parseFloat(this.userForm.get('congesPayesBaseBrut').value);\n    retour.congesPayesBaseNet   = parseFloat(this.userForm.get('congesPayesBaseNet').value);\n    retour.montantGouter        = parseFloat(this.userForm.get('montantGouter').value);\n    retour.montantIndemnites    = parseFloat(this.userForm.get('montantIndemnites').value);\n    retour.montantRepas         = parseFloat(this.userForm.get('montantRepas').value);\n    retour.moyNbHeuresGardeMois = parseFloat(this.userForm.get('moyNbHeuresGardeMois').value);\n    retour.moyNbJoursGardeMois  = parseFloat(this.userForm.get('moyNbJoursGardeMois').value);\n    retour.nbHeuresGardeSemaine = parseFloat(this.userForm.get('nbHeuresGardeSemaine').value);\n    retour.nbJoursGardeSemaine  = parseFloat(this.userForm.get('nbJoursGardeSemaine').value);\n    retour.nbSemainesGardeAn    = parseFloat(this.userForm.get('nbSemainesGardeAn').value);\n    retour.salaireBaseBrut      = parseFloat(this.userForm.get('salaireBaseBrut').value);\n    retour.salaireBaseNet       = parseFloat(this.userForm.get('salaireBaseNet').value);\n    retour.salaireTotalBaseBrut = parseFloat(this.userForm.get('salaireTotalBaseBrut').value);\n    retour.salaireTotalBaseNet  = parseFloat(this.userForm.get('salaireTotalBaseNet').value);\n    retour.tauxHoraireBrut      = parseFloat(this.userForm.get('tauxHoraireBrut').value);\n    retour.tauxHoraireNet       = parseFloat(this.userForm.get('tauxHoraireNet').value); \n\n    return retour; \n  }\n\n\n  majNbHeuresGardeSemaine(){\n    this.serviceContrat.majContratCalculMontants(this.donneesContrat.contrat).subscribe(retour=>{\n      if (retour) this.mapObjetContratVersFormulaire(retour);\n    })\n  }\n\n  majNbSemainesGardeAn(){\n    this.serviceContrat.majContratCalculMontants(this.donneesContrat.contrat).subscribe(retour=>{\n      if (retour) this.mapObjetContratVersFormulaire(retour);\n    })\n  }\n\n  majNbJoursGardeSemaine(){\n    this.serviceContrat.majContratCalculMontants(this.donneesContrat.contrat).subscribe(retour=>{\n      if (retour) this.mapObjetContratVersFormulaire(retour);\n    })\n  }\n\n  majTauxHoraireNet(){\n    this.serviceContrat.majContratCalculMontants(this.donneesContrat.contrat).subscribe(retour=>{\n      if (retour) this.mapObjetContratVersFormulaire(retour);\n    })\n  }\n}\n","module.exports = \"<p>\\n  liste-contrats works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-liste-contrats',\n  templateUrl: './liste-contrats.component.html',\n  styleUrls: ['./liste-contrats.component.scss']\n})\nexport class ListeContratsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div id=\\\"conteneur\\\">  \\n    <ng-container *ngFor=\\\"let temp of listePersonnes\\\"> \\n        <mat-card class=\\\"myMatCard\\\" *ngIf=\\\"temp.actif\\\">\\n            <mat-card-title-group class=\\\"myTitleCard\\\">            \\n                <mat-card-title>{{temp.prenom}} {{temp.nom}}</mat-card-title> \\n                <mat-card-subtitle>{{temp.status}}</mat-card-subtitle>\\n            </mat-card-title-group> \\n            <img mat-card-image class=\\\"imageMatCard\\\" src=\\\"{{temp.urlPhoto}}\\\">\\n            <mat-card-actions>\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onUpdateProfil(temp)\\\"\\n                    matTooltip=\\\"Voir les détails de la personne\\\">Détails \\n                </button>\\n                <button *ngIf=\\\"temp.actif\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onDesactiver(temp)\\\"\\n                    matTooltip=\\\"Désactiver la personne\\\">Désactiver\\n                </button>\\n                <button *ngIf=\\\"!temp.actif\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onActiver(temp)\\\"\\n                    matTooltip=\\\"Activer la personne\\\">Activer\\n                </button> \\n            </mat-card-actions>\\n        </mat-card>\\n        <ng-container *ngIf=\\\"filtre\\\">\\n            <mat-card *ngIf=\\\"!temp.actif\\\" class=\\\"myMatCard\\\" [ngClass]=\\\"{'myMatCard-desactive':temp.actif===false}\\\">\\n                <mat-card-title-group class=\\\"myTitleCard\\\">            \\n                    <mat-card-title>{{temp.prenom}} {{temp.nom}}</mat-card-title> \\n                    <mat-card-subtitle>{{temp.status}}</mat-card-subtitle>\\n                </mat-card-title-group> \\n                <img mat-card-image class=\\\"imageMatCard\\\" src=\\\"{{temp.urlPhoto}}\\\">\\n                <mat-card-actions>\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onUpdateProfil(temp)\\\"\\n                        matTooltip=\\\"Voir les détails de la personne\\\">Détails \\n                    </button>\\n                    <button *ngIf=\\\"temp.actif\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onDesactiver(temp)\\\"\\n                        matTooltip=\\\"Désactiver la personne\\\">Désactiver\\n                    </button>\\n                    <button *ngIf=\\\"!temp.actif\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onActiver(temp)\\\"\\n                        matTooltip=\\\"Activer la personne\\\">Activer\\n                    </button> \\n                </mat-card-actions> \\n            </mat-card>\\n        </ng-container>\\n    </ng-container>\\n</div>\"","module.exports = \"\"","import { Component, OnInit,Injectable, OnDestroy } from '@angular/core';\nimport { PersonnesService } from '../../services/personnes.service';\nimport { Personne } from '../../classes/personne';\nimport { UpdatePersonneComponent } from '../update-personne/update-personne.component';\nimport { MatDialog, MatSnackBar} from '@angular/material'; \nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-liste-personnes',\n  templateUrl: './liste-personnes.component.html',\n  styleUrls: ['./liste-personnes.component.scss']\n})\nexport class ListePersonnesComponent implements OnInit, OnDestroy {\n\n  listePersonnes    = [];\n  filtre            : boolean;\n  souscriptionFiltre:  Subscription\n\n  constructor(\n    private servicePersonne: PersonnesService,\n    public dialog          : MatDialog,\n    private snackBar       : MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.servicePersonne.subjectFiltre.subscribe(retour=>{\n      this.filtre=retour; \n    })    \n    this.servicePersonne.getListePersonnes().subscribe(retour=>{\n      this.listePersonnes=retour;    \n    })\n  }\n\n  // Mise à jour du profil\n  onUpdateProfil(personne: Personne){\n    let dialogRef = this.dialog.open(UpdatePersonneComponent, {\n      data: personne\n    })\n    dialogRef.afterClosed().subscribe(result => {\n      if (result){\n        this.snackBar.open('Modifications enregistrées','Fermer',{\n          duration: 2500 \n        })\n      }\n    });\n  }\n\n  // Désactiver une personne\n  onDesactiver(personne: Personne){\n    personne.actif=false\n    this.servicePersonne.changeActif(personne).subscribe()\n  }\n\n  // Active une personne\n  onActiver(personne: Personne){\n    personne.actif=true\n    this.servicePersonne.changeActif(personne).subscribe()\n  }\n\n  ngOnDestroy(){\n    \n  }\n}\n","module.exports = \"<form class='addProfil' [formGroup]='userForm'>\\n  <mat-form-field>\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Taux horaire\\\" formControlName=\\\"tauxHoraire\\\" >\\n    <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n    <mat-icon matSuffix>euro_symbol</mat-icon>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Montant d'un repas\\\" formControlName=\\\"montantRepas\\\" >\\n    <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n    <mat-icon matSuffix>euro_symbol</mat-icon>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Montant d'une indemnité\\\" formControlName=\\\"montantIndemnites\\\" >\\n    <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n    <mat-icon matSuffix>euro_symbol</mat-icon>\\n  </mat-form-field>\\n    <mat-form-field>\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Montant d'un gouter\\\" formControlName=\\\"montantGouter\\\" >\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      <mat-icon matSuffix>euro_symbol</mat-icon>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Barème au kilomètre\\\" formControlName=\\\"baremeKm\\\" >\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      <mat-icon matSuffix>euro_symbol</mat-icon>\\n    </mat-form-field>     \\n  <div>\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"userForm.invalid\\\" (click)=\\\"validation()\\\">\\n      Valider \\n      <mat-icon>send</mat-icon>\\n    </button>    \\n  </div>\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProfilNounouService } from '../../services/profil-nounou.service';\nimport { profilNounou } from '../../classes/profilNounou';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-profil-nounou',\n  templateUrl: './profil-nounou.component.html',\n  styleUrls: ['./profil-nounou.component.scss']\n})\nexport class ProfilNounouComponent implements OnInit {\n\n  userForm: FormGroup\n\n  constructor(\n    private serviceProfilNounou: ProfilNounouService,\n    private formBuilder        : FormBuilder,\n    private snackBar           : MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm(){\n    this.userForm = this.formBuilder.group({\n      tauxHoraire      : ['', Validators.required],\n      montantRepas     : ['', Validators.required],\n      montantIndemnites: ['', Validators.required],\n      montantGouter    : ['', Validators.required],\n      baremeKm         : ['', Validators.required]\n    })\n  }\n\n  validation(){\n    let profil               = new profilNounou();\n    let formulaire           = this.userForm.value;\n    profil.baremeKm          = formulaire['baremeKm'];\n    profil.montantGouters    = formulaire['montantGouter']\n    profil.montantIndemnites = formulaire['montantIndemnites']\n    profil.montantRepas      = formulaire['montantRepas']\n    profil.tauxHoraire       = formulaire['tauxHoraire']\n    this.serviceProfilNounou.setProfilNounou(profil).subscribe(retour=>{\n      if (retour){\n        this.snackBar.open('Profil mis à jour', 'Fermer', {\n          duration: 2500}\n        )\n      }\n    })\n  }\n}\n","module.exports = \"<div [ngSwitch]='user.status'>\\n    <div *ngSwitchCase=\\\"'Administrateur'\\\">\\n        <mat-accordion>\\n              <mat-expansion-panel>\\n                <mat-expansion-panel-header>\\n                  <mat-icon>dashboard</mat-icon>\\n                  Tableau de bord\\n                </mat-expansion-panel-header>\\n                <p>\\n                  <a >mon tableau de bord</a>\\n                </p>\\n              </mat-expansion-panel>\\n              <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                      <mat-icon>child_care</mat-icon>\\n                      Contrats\\n                  </mat-expansion-panel-header>\\n                  <p>\\n                      <a routerLink=\\\"/contrats\\\">Liste des contrats</a>\\n                  </p>\\n                  <p>\\n                      <a >Avenant de contrat</a>\\n                  </p>\\n                  <p>\\n                      <a routerLink=\\\"/contrat\\\">Ajouter un contrat</a>\\n                  </p>\\n                  <p>\\n                      <a >Terminer un contrat</a>\\n                  </p>\\n                  <p>\\n                      <a >Fiches de renseignements</a>\\n                  </p>\\n                  </mat-expansion-panel>                \\n              <mat-expansion-panel>\\n                    <mat-expansion-panel-header>\\n                      <mat-icon>person</mat-icon>\\n                      Personnes                    \\n                    </mat-expansion-panel-header>\\n                    <p>\\n                        <a routerLink=\\\"/personnes\\\">Liste des personnes   </a>\\n                        <mat-checkbox name=\\\"filtrePersonnes\\\" color=\\\"primary\\\" (click)=\\\"changementFiltre()\\\" [(ngModel)]=\\\"chkTous\\\" autocomplete=\\\"off\\\">Afficher les personnes inactives</mat-checkbox> \\n                    </p>\\n                    <p>\\n                        <a routerLink = \\\"/SignUp\\\">Ajouter une personne</a> \\n                    </p>\\n                    <p>\\n                        <a routerLink = \\\"/SignUp\\\">Ajouter un utilisateur</a>\\n                    </p>\\n                    <p>\\n                        <a (click)=\\\"updateProfile()\\\">Modifier un compte utilisateur</a> \\n                    </p>\\n                    </mat-expansion-panel>  \\n            <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <mat-icon>face</mat-icon>\\n              Nounou\\n            </mat-expansion-panel-header>\\n            <p>\\n              <a routerLink=\\\"/profilNounou\\\">Données contractuelles </a>\\n            </p>\\n            <p>\\n              <a (click)=\\\"updateProfileNounou()\\\">Modifier le profil utilisateur</a>\\n            </p>\\n            </mat-expansion-panel>          \\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-icon>date_range</mat-icon>\\n                Mois en cours\\n              </mat-expansion-panel-header>\\n              <p>\\n                <a>\\n                  Synthèse \\n                </a>\\n              </p>\\n              <p>\\n                <a>\\n                  Vue par enfant\\n                </a>\\n              </p>\\n          </mat-expansion-panel>\\n        </mat-accordion>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Nounou'\\\">\\n      <mat-accordion> \\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-icon>assessment</mat-icon>\\n                Mon tableau de bord\\n            </mat-expansion-panel-header>\\n            <p>\\n                <a >Synthèse du mois en cours</a>\\n            </p>\\n            <p>\\n                <a >Pointage du mois en cours</a>\\n            </p>\\n        </mat-expansion-panel>    \\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-icon>face</mat-icon>\\n                Mon profil\\n            </mat-expansion-panel-header>\\n            <p>\\n                <a (click)=\\\"updateProfileNounou()\\\">Modifier mon profil</a>\\n            </p>\\n            <p>\\n                <a >Modifier une fiche enfant</a>\\n            </p>\\n            <p>\\n                <a routerLink=\\\"/ProfileNounou\\\">Modifier mes informations financières</a>\\n            </p>\\n        </mat-expansion-panel> \\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-icon>child_friendly</mat-icon>\\n                Les enfants\\n            </mat-expansion-panel-header>\\n            <p>\\n                <a href='#'>Les contrats en cours</a>\\n            </p>\\n            <p>\\n                <a href='#'>Les anniversaires</a>\\n            </p>\\n            <p>\\n                <a href='#'>Fiche de renseignements</a>\\n            </p>\\n            <p>\\n                <a href='#'>Les vacances des enfants</a>\\n            </p>\\n        </mat-expansion-panel>   \\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-icon>date_range</mat-icon>\\n                Administratif\\n            </mat-expansion-panel-header>\\n            <p>\\n                <a href='#'>Feuille de pointage</a>\\n            </p>\\n            <p>\\n                <a href='#'>Autorisations de sortie</a>\\n            </p>\\n            <p>\\n                <a href='#'>Enregistrer les dates de mes vacances</a>\\n            </p>\\n            <p>\\n                <a href='#'>Imprimer une facture</a>\\n            </p>\\n            <p>\\n                <a href='#'>Enregistrer les dates de vacances scolaires</a>\\n            </p>\\n        </mat-expansion-panel>  \\n        <mat-expansion-panel>\\n                <mat-expansion-panel-header>\\n                    <mat-icon>archive</mat-icon>\\n                    Mes archives\\n                </mat-expansion-panel-header>\\n                <p>\\n                    <a href='#'>Pointages du mois dernier</a>\\n                </p>\\n                <p>\\n                    <a href='#'>Factures du mois dernier</a>\\n                </p>\\n                <p>\\n                    <a href='#'>Mes revenus du mois dernier</a>\\n                </p>\\n                <p>\\n                    <a href='#'>Les mois précédents</a>\\n                </p>\\n            </mat-expansion-panel>   \\n      </mat-accordion>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Parent'\\\">\\n        <mat-accordion>\\n            Test du parent                \\n        </mat-accordion>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Enfant'\\\">\\n        <mat-accordion>  \\n            Test de l'enfant              \\n        </mat-accordion>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Visiteur'\\\"> \\n        <br> \\n        Bonjour visiteur(se)\\n    </div>\\n  </div>\\n  <br>\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UsersService } from '../../services/users.service'\nimport { User } from '../../classes/user'\nimport { Subscription } from 'rxjs';\nimport { PersonnesService } from '../../services/personnes.service';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit, OnDestroy {\n\n  user            : User;\n  soucriptionUsers: Subscription\n  chkTous         = false;\n\n  constructor(\n    private serviceUsers    : UsersService,\n    private servicePersonnes: PersonnesService\n  ) { }\n \n  ngOnInit() {    \n    this.user = new User();\n    this.soucriptionUsers = this.serviceUsers.subjectUser.subscribe(\n      (temp: User)=>{\n        this.user=temp;\n      }\n    );\n    this.servicePersonnes.setFiltreAffichagePersonnes(this.chkTous)\n  }\n\n  ngOnDestroy(){\n    this.soucriptionUsers.unsubscribe();\n  }\n\n  changementFiltre(){\n    this.servicePersonnes.setFiltreAffichagePersonnes(!this.chkTous);\n  }\n}\n","module.exports = \"<form class ='register' [formGroup]='userForm'>\\n  <mat-icon matPrefix>person</mat-icon>\\n  <mat-form-field>\\n      <input matInput placeholder='Nom' type=\\\"text\\\" formControlName=\\\"nom\\\" required>\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n  </mat-form-field>\\n  <mat-icon matPrefix>person</mat-icon>\\n  <mat-form-field>\\n      <input matInput placeholder='Prénom' type=\\\"text\\\" formControlName=\\\"prenom\\\" required>\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n  </mat-form-field>\\n  <mat-icon>vpn_key</mat-icon>\\n  <mat-form-field>\\n      <input matInput placeholder='Mot de passe' type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n  </mat-form-field>\\n  <mat-icon>vpn_key</mat-icon>\\n  <mat-form-field>\\n      <input matInput placeholder='Confirmer le mot de passe' type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required> \\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error> \\n  </mat-form-field>\\n  <mat-icon>phone</mat-icon>\\n  <mat-form-field>\\n      <input matInput type=\\\"text\\\" placeholder=\\\"01-23-45-67-89 ou 0123456789\\\" formControlName=\\\"telPortable\\\">\\n  </mat-form-field>\\n  <mat-datepicker-toggle [for]=\\\"pickerDate\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #pickerDate></mat-datepicker>\\n  <mat-form-field>      \\n    <input matInput [matDatepicker]=\\\"pickerDate\\\"  placeholder ='Choisir une date de naissance' formControlName=\\\"dateNaissance\\\">\\n  </mat-form-field> \\n  <mat-icon>place</mat-icon>\\n  <mat-form-field>\\n      <input matInput type=\\\"text\\\" placeholder ='Adresse' formControlName=\\\"adresse\\\">\\n  </mat-form-field>\\n  <mat-icon>email</mat-icon>\\n  <mat-form-field>    \\n      <input matInput placeholder='E-mail' type=\\\"text\\\" formControlName=\\\"mail\\\" required>\\n      <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n  </mat-form-field>\\n      <div>\\n          <mat-icon>add_a_photo</mat-icon>\\n          <input type=\\\"file\\\" placeholder=\\\"Image du profil\\\" (change)=\\\"selectionFichier($event)\\\" name=\\\"avatar\\\" accept=\\\"image/*\\\">\\n      </div>\\n  <p>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"userForm.invalid\\\" (click)=\\\"validation()\\\" name=\\\"validation\\\">Valider l'inscription \\n          <mat-icon>send</mat-icon>\\n      </button> \\n  </p>\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { UsersService } from '../../services/users.service' \nimport { PersonnesService } from '../../services/personnes.service'\nimport { ErrorHandlerService } from '../../services/error-handler.service'\n\nimport { User } from '../../classes/user';\nimport { Personne } from '../../classes/personne';\n\nimport { MatSnackBar, DateAdapter } from '@angular/material'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  fichier: File\n  userForm: FormGroup;\n\n  constructor(\n    private location       : Location,\n    private serviceUsers   : UsersService,\n    private servicePersonne: PersonnesService,\n    private snackBar       : MatSnackBar,\n    private formBuilder    : FormBuilder,\n    private serviceErreur  : ErrorHandlerService,\n    private adapter        : DateAdapter<any>\n  ) { }\n\n  initForm(){\n    this.adapter.setLocale('fr-FR');\n    this.userForm = this.formBuilder.group({\n      nom           : ['', Validators.required],\n      prenom         : ['', Validators.required],\n      password       : ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      telPortable    : ['', Validators.pattern(/#^0[1-68]([-. ]?[0-9]{2}){4}$#/)],\n      dateNaissance  : ['', Validators.minLength(0)],\n      mail           : ['', [Validators.required, Validators.email]],\n      adresse        : ['', ]\n    })\n  }\n\n  validation(){\n\n    let user       = new User();\n    let personne   :Personne=new Personne();\n    let formulaire = this.userForm.value;    \n    \n    if (formulaire['password'] == formulaire['confirmPassword']){\n      user.email    = formulaire['mail'];\n      user.mdp      = formulaire['password'];    \n      personne.nom           = formulaire['nom'];\n      personne.prenom        = formulaire['prenom'];\n      personne.dateNaissance = formulaire['dateNaissance'];\n      personne.adresse       = formulaire['adresse'];\n      personne.telPortable   = formulaire['telPortable'];\n      personne.mail          = formulaire['mail'];\n      personne.actif         = true;\n      personne.status        = 'Parent';\n      this.servicePersonne.registerNewPersonne(personne, this.fichier).subscribe(retour=>{\n        if (retour){\n          user.urlPhoto=personne.urlPhoto;\n          this.serviceUsers.registerNewUser(user).subscribe(retour=>{\n            if (retour) this.snackBar.open(`Enregistrement effectué`, 'Fermer', {\n              duration: 2500}\n            )\n          });\n        }\n        this.snackBar.open('Enregistrement effectué','Fermer', {duration: 2500});\n      });      \n    }else{\n      this.serviceErreur.afficheErreur('Erreur de saisie :','Les mots de passe sont différents')\n    }\n  }\n\n  selectionFichier(event){\n    this.fichier=event.target.files[0];\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n}\n","module.exports = \"<h2 mat-dialog-title>Modifier le profil de {{personne.prenom}} {{personne.nom}} </h2>\\n<mat-dialog-content>\\n  <form class ='register' [formGroup]='userForm'>\\n    <div>\\n      <mat-icon matPrefix>person</mat-icon>\\n      <mat-form-field>      \\n        <input matInput placeholder='Nom' type=\\\"text\\\" formControlName=\\\"nom\\\" required>\\n        <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      </mat-form-field>\\n      <mat-icon matPrefix>person</mat-icon>\\n      <mat-form-field>\\n        <input matInput placeholder='Prénom' type=\\\"text\\\" formControlName=\\\"prenom\\\" required>\\n        <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-icon>phone</mat-icon>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"01-23-45-67-89 ou 0123456789\\\" formControlName=\\\"telPortable\\\">\\n      </mat-form-field>\\n      <mat-datepicker-toggle [for]=\\\"pickerDate\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #pickerDate></mat-datepicker>\\n      <mat-form-field>      \\n        <input matInput [matDatepicker]=\\\"pickerDate\\\"  placeholder ='Choisir une date de naissance' formControlName=\\\"dateNaissance\\\">\\n      </mat-form-field> \\n      <mat-icon>place</mat-icon>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder ='Adresse' formControlName=\\\"adresse\\\">\\n      </mat-form-field>\\n    </div> \\n    <div>\\n      <mat-icon>email</mat-icon>\\n      <mat-form-field>    \\n        <input matInput placeholder='E-mail' type=\\\"text\\\" formControlName=\\\"mail\\\" required>\\n        <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      </mat-form-field>     \\n      <mat-icon>poll</mat-icon>\\n      <mat-form-field>    \\n        <mat-select placeholder=\\\"Status\\\" [(value)]=\\\"personne.status\\\" required formControlName=\\\"status\\\">\\n          <mat-option *ngFor=\\\"let item of listeStatus\\\" [value]=\\\"item\\\">\\n            {{item}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf='userForm.invalid'>Champ requis invalide</mat-error>\\n      </mat-form-field>\\n      <mat-checkbox color=\\\"primary\\\" formControlName='actif' autocomplete=\\\"off\\\">Actif</mat-checkbox>\\n    </div>\\n      <div>\\n        <mat-icon>add_a_photo</mat-icon>\\n        <input type=\\\"file\\\" placeholder=\\\"Image du profil\\\" (change)=\\\"selectionFichier($event)\\\" name=\\\"avatar\\\" accept=\\\"image/*\\\">\\n      </div>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-raised-button mat-dialog-close color=\\\"primary\\\" (click)=\\\"annulation()\\\" name=\\\"annulation\\\">Annuler\\n    <mat-icon>cancel</mat-icon>\\n  </button>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"validation()\\\" name=\\\"validation\\\">Valider les modifications \\n      <mat-icon>done</mat-icon>\\n  </button> \\n</mat-dialog-actions>\"","module.exports = \"\"","import { Component, Inject } from '@angular/core';\nimport { DateAdapter, throwToolbarMixedModesError } from '@angular/material'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Personne } from '../../classes/personne';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'; \nimport { PersonnesService } from '../../services/personnes.service';\n\n@Component({\n  selector: 'app-update-personne',\n  templateUrl: './update-personne.component.html',\n  styleUrls: ['./update-personne.component.scss'],\n  preserveWhitespaces: true\n})\nexport class UpdatePersonneComponent {\n\n  userForm   : FormGroup\n  fichier    : File\n  personne   : Personne\n  listeStatus: string[]=['Administrateur', 'Nounou', 'Parent', 'Enfant', 'Tuteur', 'Medecin'];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: Personne,\n    public ref: MatDialogRef<UpdatePersonneComponent>,\n    \n    private formBuilder    : FormBuilder,\n    private adapter        : DateAdapter<Personne>,\n    private servicePersonne: PersonnesService\n  ) { \n    this.personne=data;\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm(){\n    this.adapter.setLocale('fr-FR');\n    this.userForm = this.formBuilder.group({\n      nom          : [this.personne.nom, Validators.required],\n      prenom       : [this.personne.prenom, Validators.required],\n      telPortable  : [this.personne.telPortable, Validators.pattern(/#^0[1-68]([-. ]?[0-9]{2}){4}$#/)],\n      dateNaissance: [this.personne.dateNaissance, Validators.minLength(0)],\n      mail         : [this.personne.mail, [Validators.required, Validators.email]],\n      adresse      : [this.personne.adresse, ],\n      actif        : [this.personne.actif, ],\n      status       : [this.personne.status, ] \n    })\n  }\n\n  validation(){\n\n    let formulaire = this.userForm.value;          \n    this.personne.nom           = formulaire['nom'];\n    this.personne.prenom        = formulaire['prenom'];\n    this.personne.dateNaissance = formulaire['dateNaissance'];\n    this.personne.adresse       = formulaire['adresse'];\n    this.personne.telPortable   = formulaire['telPortable'];\n    this.personne.mail          = formulaire['mail'];\n    this.personne.actif         = formulaire['actif'];\n    this.personne.status        = formulaire['status'];  \n    \n    this.servicePersonne.updatePersonne(this.personne).subscribe(retour=>{\n      if (retour) this.ref.close('true')\n    })\n  }\n\n  selectionFichier(event){\n    this.fichier=event.target.files[0]; \n  }\n\n  annulation(){\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Contrat } from '../classes/contrat';\nimport { ErrorHandlerService } from './error-handler.service';\nimport * as firebase from 'firebase'\nimport { DonneesContrat } from '../classes/donneesContrat';\nimport { PersonnesService } from './personnes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContratService {\n\n  contrat : Contrat = new Contrat();\n\n  constructor(\n    private serviceErreurs : ErrorHandlerService,\n    private servicePersonne: PersonnesService\n  ) { }\n\n  // Ajoute un contrat\n  registerNewContrat(pDonneesContrat: DonneesContrat):Observable<boolean>{    \n    return new Observable<boolean>(observer=>{\n      firebase.firestore().collection('contrats').doc(pDonneesContrat.enfant.nom+'_'+pDonneesContrat.enfant.prenom).set(\n        JSON.parse(JSON.stringify(pDonneesContrat))\n      ).then(()=>{\n        this.servicePersonne.checkAndAddPersonne(pDonneesContrat.docteur);\n        this.servicePersonne.checkAndAddPersonne(pDonneesContrat.mere);\n        this.servicePersonne.checkAndAddPersonne(pDonneesContrat.pere);\n        this.servicePersonne.checkAndAddPersonne(pDonneesContrat.tuteur);\n        this.servicePersonne.checkAndAddPersonne(pDonneesContrat.enfant);\n        observer.next(true); \n      },(error)=>{\n        observer.next(false); \n      })\n    });\n  }  \n\n  // Modifie un contrat\n  updateContrat():Observable<boolean>{\n    return new Observable<boolean>(observer=>{});\n  }\n\n  // Supprime un contrat\n  deleteContrat():Observable<boolean>{\n    return new Observable<boolean>(observer=>{});\n  }\n\n  // cherche un contrat suivant le nom de l'enfant\n  getContratByNomPrenomEnfant(nomEnfant: string):Observable<boolean>{\n    return new Observable<boolean>(observer=>{});\n  }\n\n  // Récupère la liste des contrats\n  getListeContrats(): Observable<DonneesContrat[]>{    \n    return new Observable<DonneesContrat[]>(observer=>{\n      let retour =[];\n      firebase.firestore().collection('contrats').get().then(bdd=>{\n        if (bdd){\n          bdd.docs.forEach(temp=>{\n            retour.push(JSON.parse(JSON.stringify(temp.data()))) \n          })\n        }else console.log('retour vide')\n      })\n      observer.next(retour)\n    })\n  }\n  // Calcule et met à jour le taux oraire brut lors de la saisie du net\n  private calculTauxHoraireBrut(){\n    this.contrat.tauxHoraireBrut = this.contrat.tauxHoraireNet*100/77\n    this.calculSalaireBaseBrut()\n    this.calculCPBaseBrut()\n    this.calculCPBaseNet()\n  }\n\n  // Calcule la moyenne du nombre d'heures de garde par mois\n  private calculMoyenneHeuresParMois(){\n    this.contrat.moyNbHeuresGardeMois = (this.contrat.nbHeuresGardeSemaine * this.contrat.nbSemainesGardeAn) / 12\n  }\n\n  // Calcule la moyenne de jours par mois\n  private calculMoyenneJoursParMois(){\n    this.contrat.moyNbJoursGardeMois = (this.contrat.nbSemainesGardeAn*this.contrat.nbJoursGardeSemaine) / 12\n  }\n\n  // Calcule le salaire net de base\n  private calculSalaireBaseNet(){\n    this.contrat.salaireBaseNet = (this.contrat.tauxHoraireNet*this.contrat.nbSemainesGardeAn*this.contrat.nbHeuresGardeSemaine)/12    \n    this.calculSalaireBaseBrut()\n    this.calculCPBaseBrut()\n    this.calculCPBaseNet()\n    this.calculSalaireTotalBaseNet()\n  }\n\n  // Calcule le salaire brut de base\n  private calculSalaireBaseBrut(){\n    this.contrat.salaireBaseBrut = (this.contrat.tauxHoraireBrut*this.contrat.nbSemainesGardeAn*this.contrat.nbHeuresGardeSemaine)/12  \n    this.calculCPBaseBrut()\n    this.calculCPBaseNet()\n    this.calculSalaireTotalBaseBrut()\n  }\n\n  // Calcule la base de rémunération des congés payés brut\n  private calculCPBaseBrut(){\n    this.contrat.congesPayesBaseBrut = (5*this.contrat.tauxHoraireBrut*this.contrat.nbHeuresGardeSemaine) / 12    \n    this.calculSalaireTotalBaseBrut()\n  }\n\n  // Calcule la base de rémunération des congés payés net\n  private calculCPBaseNet(){\n    this.contrat.congesPayesBaseNet = (5*this.contrat.tauxHoraireNet*this.contrat.nbHeuresGardeSemaine) / 12    \n    this.calculSalaireTotalBaseNet()\n  }\n\n  // Calcule le total brut du salaire \n  private calculSalaireTotalBaseBrut(){\n    this.contrat.salaireTotalBaseBrut = this.contrat.salaireBaseBrut + this.contrat.congesPayesBaseBrut\n  }\n\n  // Calcule le total net du salaire\n  private calculSalaireTotalBaseNet(){\n    this.contrat.salaireTotalBaseNet = this.contrat.salaireBaseNet + this.contrat.congesPayesBaseNet\n  }\n\n  // MAJ du contrat et calculs\n  majContratCalculMontants(pContrat: Contrat):Observable<Contrat>{\n    return new Observable<Contrat>(observer=>{\n      if (pContrat){\n        this.contrat=pContrat;\n        this.calculTauxHoraireBrut();\n        this.calculMoyenneHeuresParMois();\n        this.calculMoyenneJoursParMois();\n        this.calculSalaireBaseNet();\n        this.calculSalaireBaseBrut();\n        this.calculCPBaseBrut();\n        this.calculCPBaseNet();\n        this.calculSalaireTotalBaseBrut();\n        this.calculSalaireTotalBaseNet();\n        observer.next(this.contrat);\n      }else{\n        this.serviceErreurs.afficheErreur('Erreur', 'le contrat passé est vide ou absent');\n        observer.next(null);\n      }\n    })\n  }\n}","import { Injectable, Component, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'\n\nexport interface DialogData {\n  titre  : string;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService {\n\n  constructor(\n    public myModalDialog: MatDialog\n  ) { }\n  \n  afficheErreur(pTitre: string, pMessage: string){\n    \n    const dialogRef = this.myModalDialog.open(modalErrorHandler, {\n      data: {\n        titre  : pTitre,\n        message: pMessage    \n      }  \n    })\n  }\n}\n\n@Component({\n  selector: 'modalErrorHandler',\n  template: `\n    <h1 mat-dialog-title>{{titre}}</h1>\n    <div mat-dialog-content>\n      <div><b>Détail de l'erreur : </b>{{message}}</div>\n    </div>\n  `\n})\nexport class modalErrorHandler{\n\n  titre  : string\n  message: string\n\n  constructor(\n    public dialogRef: MatDialogRef<modalErrorHandler>,\n    @Inject(MAT_DIALOG_DATA) public data: string    \n  ) {\n    this.titre   = data['titre']\n    this.message = data['message']\n   }\n}","import { Injectable, OnInit } from '@angular/core'; \nimport { Personne } from '../classes/personne';\nimport { Subject, Observable } from 'rxjs';\nimport * as firebase from 'firebase'\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonnesService {\n\n  private personneConnecte: Personne = null;\n  subjectPersonne         = new Subject<Personne>();\n  listePersonnes          = [];\n  filtreAffichage         : boolean\n  subjectFiltre           = new Subject<boolean>()\n\n  constructor(\n    private serviceError: ErrorHandlerService\n  ) { }\n\n  ngOnInit(){\n    this.personneConnecte = new Personne(); \n  }\n\n  // Définit si on affiche les personnes inactives\n  setFiltreAffichagePersonnes(res: boolean){\n    this.filtreAffichage=res;\n    this.emitChangementFiltre();\n  }\n\n  // Emet le signal de changement de filtre\n  emitChangementFiltre(){\n    this.subjectFiltre.next(this.filtreAffichage)\n  }\n\n  emitSubjectPersonne(){\n    this.subjectPersonne.next(this.personneConnecte);\n  }\n\n  // Mise à jour d'une personne\n  updatePersonne(personne: Personne):Observable<boolean>{\n    return new Observable<boolean>(observer=>{\n      if (personne.idDoc){\n        firebase.firestore().collection('personnes').doc(personne.idDoc).update(JSON.parse(JSON.stringify(personne)))\n        .then(()=>{\n          observer.next(true) \n        })   \n      }else{\n        this.serviceError.afficheErreur('Erreur dans la mise à jour du profil', 'non trouvé dans la base de données')\n        observer.next(false);\n      }\n    })\n  }\n\n  //Retourne personneConnecte\n  getPersonneConnecte():Personne{\n    return this.personneConnecte;\n  }\n\n  //Définit la personne connectée au site\n  setPersonneConnecte(personne: Personne){\n    this.personneConnecte=personne;\n    this.emitSubjectPersonne();\n  }\n\n  //procédure d'enregistrement d'une nouveau Personne\n  registerNewPersonne(personne: Personne, fichier?: File): Observable<boolean>{       \n    return new Observable<boolean>((observer)=>{\n      if (fichier){\n        this.enregistreAvatar(fichier).subscribe(url=>{\n          if (url){\n            personne.urlPhoto=url;\n            firebase.firestore().collection('personnes').doc(personne.nom+'_'+personne.prenom).set(\n              JSON.parse(JSON.stringify(personne))).then(()=>{\n                observer.next(true);\n              },\n              (error)=>{\n                this.serviceError.afficheErreur('Erreur survenur lors de l\\ajout', error);\n                observer.next(false); \n            })\n          }\n        })        \n        firebase.firestore().collection('personnes').doc(personne.nom+'_'+personne.prenom).set(\n          JSON.parse(JSON.stringify(personne))).then(()=>{\n            observer.next(true);\n          },\n          (error)=>{\n            this.serviceError.afficheErreur('Erreur survenur lors de l\\ajout', error);\n            observer.next(false); \n        })\n      }else{\n        firebase.firestore().collection('personnes').doc(personne.nom+'_'+personne.prenom).set(\n          JSON.parse(JSON.stringify(personne))).then(()=>{\n            observer.next(true);\n          },\n          (error)=>{\n            this.serviceError.afficheErreur('Erreur survenur lors de l\\'ajout', error);\n            observer.next(false); \n        })\n        observer.next(false) \n      }\n    });\n  }\n\n  enregistreAvatar(fichier: File):Observable<string>{\n    return new Observable<string>(observer=>{\n      if (fichier){\n        let emplacement = 'avatars/'+Date.now()+fichier.name;\n        let upload = firebase.storage().ref().child(emplacement).put(fichier)   \n        upload.on(firebase.storage.TaskEvent.STATE_CHANGED,()=>{\n          // Chargement en cours\n        },\n        (error)=>{\n          this.serviceError.afficheErreur('Erreur lors du chargement de la photo','Erreur inconnue')\n          observer.next(null)\n        },\n        ()=>{     \n          firebase.storage().ref().child(emplacement).getDownloadURL().then(url=>{            \n            observer.next(url);\n          })          \n        })\n      }\n    })\n  }\n \n  // retourne la liste des personnes enregistrées\n  getListePersonnes():Observable<Personne[]>{\n    return new Observable<Personne[]>(observer=>{\n      let retour=[];\n      firebase.firestore().collection('personnes').get().then(snap=>{\n        if (snap){\n          snap.docs.forEach(temp=>{\n            let personne=JSON.parse(JSON.stringify(temp.data()))\n            personne.idDoc=temp.id\n            retour.push(personne)\n          })\n          observer.next(retour);\n        }else observer.next(null);\n      })\n    })\n  }\n \n  // Vérifie les doublons et ajoute dans la bdd\n  checkAndAddPersonne(personne: Personne){ \n    this.getListePersonnes().subscribe(liste=>{\n      if (liste){  \n        this.listePersonnes=liste;\n        // Vérifie si les personnes saisies sont déjà dans la bdd\n        if (personne.prenom!='' && personne.nom!=''){\n          if (!this.listePersonnes.find(el=>{return el.nom===personne.prenom;})){\n            if (!this.listePersonnes.find(el=>{return el.prenom===personne.nom;})){ \n              // Ajout dans la bdd\n              this.registerNewPersonne(personne).subscribe()  \n            }\n          }\n        }\n      }\n    })\n  }\n\n  // Connecte la personne gràce a son mail et sopn mdp\n  connectePersonneByMail(mail: string):Observable<Personne>{\n    return new Observable<Personne>(observer=>{\n      this.getPersonneByMail(mail).subscribe(personne=>{\n        if (personne){\n          this.setPersonneConnecte(personne);\n          observer.next(personne);\n        }else{\n          observer.next(null);\n        }\n      })\n    })    \n  }\n\n  // Retrouve une personne en fonction de son mail\n  getPersonneByMail(mail: string):Observable<Personne>{\n    return new Observable<Personne>(observer=>{\n      firebase.firestore().collection('personnes').where('mail','==',mail).get().then(snap=>{\n        if (!snap.empty){\n          let retour = new Personne()\n          retour = JSON.parse(JSON.stringify(snap.docs[0].data()))\n          retour.idDoc = snap.docs[0].id\n          observer.next(retour) \n        }else observer.next(null)\n      })\n    })\n  }\n\n  // Retrouve une personne en fonction de ses nom et prénom\n  getPersonneByPrenomAndNom(prenom: string, nom: string):Observable<Personne>{\n    return new Observable<Personne>(observer=>{\n      let retour = new Personne();\n      firebase.firestore().collection('personnes').where('prenom','==',prenom).where('nom','==',nom).get().then(snap=>{\n        if (snap){\n          retour=JSON.parse(JSON.stringify(snap.docs[0].data()));\n          retour.idDoc=snap.docs[0].id\n          observer.next(retour);\n        }else{\n          this.serviceError.afficheErreur('Résultat :','Personne n\\'est enregistré avec ces noms et prénoms');\n          observer.next(null);\n        }\n      })\n    })\n  }\n\n  //enregistre l'avatar sur le serveur\n  uploadAvatarUser(fichier :File){   \n    return new Observable<string>((observer)=>{\n      if (!fichier){\n        this.serviceError.afficheErreur('Erreur','fichier absent');\n        observer.next('echec');\n      } \n      if (!firebase.auth().currentUser){\n        this.serviceError.afficheErreur('Erreur de transfert','Utilisateur non connecté');\n        observer.next('echec')\n      }\n      let emplacement = 'avatars/'+Date.now()+fichier.name;\n      let upload = firebase.storage().ref().child(emplacement).put(fichier);\n    })\n  }\n\n  // Desactive une personne\n  changeActif(personne: Personne):Observable<boolean>{\n    return new Observable<boolean>(observer=>{\n      firebase.firestore().collection('personnes').doc(personne.idDoc).update(\n        JSON.parse(JSON.stringify(personne))\n      ).then(()=>{\n        observer.next(true)\n      })\n      .catch(error=>{\n        this.serviceError.afficheErreur('Une erreur s\\est produite',error)\n      })\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { profilNounou } from '../classes/profilNounou';\nimport * as firebase from 'firebase'\nimport { Observable } from 'rxjs';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilNounouService {\n\n  private profil: profilNounou\n\n  constructor(private serviceErreurs: ErrorHandlerService) { }\n\n  // Définit le profil \n  setProfilNounou(profil: profilNounou):Observable<boolean>{\n    return new Observable<boolean>(observer=>{\n      firebase.firestore().collection('nounou').doc('profil').set({\n        tauxHoraire      : profil.tauxHoraire,\n        montantRepas     : profil.montantRepas,\n        montantIndemnites: profil.montantIndemnites,\n        montantGouter    : profil.montantGouters,\n        baremeKm         : profil.baremeKm\n      }).then(()=>{\n        observer.next(true);\n      },\n      (error)=>{\n        this.serviceErreurs.afficheErreur('Erreur dans l\\'enregistrement du profil nounou', error);\n        observer.next(false);\n      })\n    })\n  }\n\n  // Récupère le profil\n  getProfilFromServer():Observable<profilNounou>{\n    return new Observable<profilNounou>(observer=>{\n      firebase.firestore().collection('nounou').doc('profil').get().then(snap=>{\n        if (snap){\n          let retour = new profilNounou();\n          retour.baremeKm=snap.data()['baremeKm'];\n          retour.montantGouters=snap.data()['montantGouter'];\n          retour.montantIndemnites=snap.data()['montantIndemnites'];\n          retour.montantRepas=snap.data()['montantRepas'];\n          retour.tauxHoraire=snap.data()['tauxHoraire'];\n          observer.next(retour); \n        }else{\n          this.serviceErreurs.afficheErreur('Le profil n\\'est pas renseigné','Remplissez le profil en premier lieu');          \n          observer.next(null);\n        }\n      },\n      error=>{\n        this.serviceErreurs.afficheErreur('Une erreur s\\'est produite lors de la récupération du profil',error);\n        observer.next(null); \n      })\n    })\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { User } from '../classes/user';\nimport { Subject, Observable, observable } from 'rxjs';\nimport * as firebase from 'firebase';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { PersonnesService } from './personnes.service';\nimport { Personne } from '../classes/personne';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  private userConnecte : User=null;\n  subjectUser= new Subject<User>();\n\n  constructor(\n    private serviceErreur  : ErrorHandlerService,\n    private servicePersonne: PersonnesService\n  ) { \n    firebase.auth().onAuthStateChanged(\n      (user)=>{\n        let personne = new Personne();\n        if (user){\n          this.userConnecte             = new User();\n          this.userConnecte.email       = user.email;  \n          this.userConnecte.urlPhoto    = user.photoURL;\n          this.userConnecte.isConnected = true;                    \n          this.servicePersonne.connectePersonneByMail(user.email).subscribe(personne=>{           \n            if (personne){\n              this.userConnecte.status=personne.status\n              this.servicePersonne.emitSubjectPersonne();\n              this.emitSubjectUser();\n            }\n          })          \n        }else{ \n          this.userConnecte=new User();\n          this.userConnecte.isConnected=false;\n          this.emitSubjectUser();\n        }\n      }\n    )\n  }\n\n  ngOnInit(){\n    this.userConnecte = new User();     \n  }\n\n  emitSubjectUser(){\n    this.subjectUser.next(this.userConnecte);\n  }\n\n  getUserConnecte():User{\n    return this.userConnecte;\n  }\n\n  //Procédure de connexion\n  signIn(user: User){\n    firebase.auth().signInWithEmailAndPassword(user.email, user.mdp).then(\n      ()=>{},\n      (erreur)=>{\n        this.userConnecte= new User();\n        switch (erreur.code){\n          case 'auth/invalid-email':\n            this.serviceErreur.afficheErreur(\"Erreur lors de la connexion de l'utilisateur\", 'le mail saisi est invalide');\n            break;\n          case 'auth/user-not-found':\n            this.serviceErreur.afficheErreur(\"Erreur lors de la connexion de l'utilisateur\", 'Utilisateur introuvable');\n            break;\n          case 'auth/user-disabled':\n            this.serviceErreur.afficheErreur(\"Erreur lors de la connexion de l'utilisateur\", 'Utilisateur désactivé');\n            break;\n          case 'auth/wrong-password':\n            this.serviceErreur.afficheErreur(\"Erreur lors de la connexion de l'utilisateur\", 'Mot de passe incorrect');\n            break;\n          default:\n        this.serviceErreur.afficheErreur(\"Erreur lors de la connexion de l'utilisateur\", erreur/*'Une erreur s\\'est produite dans la connexion de l\\'utilisateur'*/);\n        }\n      }\n    )\n  }\n\n  // Déconnexion\n  signOut(){\n    firebase.auth().signOut();\n  }\n\n  // Enregistrement d'un nouveau user\n  registerNewUser(user: User): Observable<boolean>{  \n    return new Observable<boolean>((observer)=>{\n       firebase.auth().createUserWithEmailAndPassword(user.email, user.mdp).then( \n        (retourUser)=>{\n          user.uidfirebase=retourUser.user.uid;\n          if (user.urlPhoto!='') this.updatePhotoUser(user)\n          observer.next(true);\n        },\n        (erreur)=>{\n          let messageErreur = '';\n          switch (erreur.code){\n            case 'auth/invalid-email':\n            messageErreur = 'le mail saisi est invalide';\n              this.serviceErreur.afficheErreur(\"Erreur lors de l'enregistrement de l'utilisateur\", messageErreur);\n              break;\n            case 'auth/email-already-in-use':\n            messageErreur = 'E-mail déjà enregistré sur le site';\n              this.serviceErreur.afficheErreur(\"Erreur lors de l'enregistrement de l'utilisateur\", messageErreur);\n              break;\n            case 'auth/operation-not-allowed':\n            messageErreur = 'Opération non permise';\n              this.serviceErreur.afficheErreur(\"Erreur lors de l'enregistrement de l'utilisateur\", messageErreur);\n              break;\n            case 'auth/weak-password':\n            messageErreur = 'Mot de passe trop faible';\n              this.serviceErreur.afficheErreur(\"Erreur lors de l'enregistrement de l'utilisateur\", messageErreur);\n              break;\n            default:\n            messageErreur = 'Une erreur s\\'est produite dans l\\'enregistrement de l\\'utilisateur';\n              this.serviceErreur.afficheErreur(\"Erreur lors de l'enregistrement de l'utilisateur\", messageErreur);\n          }\n          observer.next(false);   \n        }\n      )      \n    })\n  } \n\n  //MAJ du profil connecté\n  updatePhotoUser(user: User): Observable<boolean>{    \n    return new Observable<boolean>((observer)=>{\n      if (!firebase.auth().currentUser){\n        firebase.auth().signInWithEmailAndPassword(user.email, user.mdp).then(()=>{},\n        (error)=>{\n          this.serviceErreur.afficheErreur('Erreur lors de la mise à jour du profil', error);\n          observer.next(false);  \n        })\n      }\n      let userFirebase :firebase.User=firebase.auth().currentUser;\n      userFirebase.photoURL=user.urlPhoto;\n      firebase.auth().updateCurrentUser(userFirebase).then(()=>{\n        observer.next(true);\n      },\n      (error)=>{\n        this.serviceErreur.afficheErreur('Erreur lors de la mise à jour du profil', error);\n        observer.next(false);\n      })\n    })\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}